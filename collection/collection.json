{
	"info": {
		"_postman_id": "c355039b-5012-41f7-81f2-347a32e7f4e3",
		"name": "Dmoney_Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17913091"
	},
	"item": [
		{
			"name": "User login using wrong email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var token = jsonData.token;\r",
							"pm.collectionVariables.set(\"token\", token)\r",
							"pm.environment.set(\"token\", token)\r",
							"\r",
							"pm.test(\"User login unsuccessfully\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User not found\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"moroco@roadtocareer.net\",\r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User login using wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var token = jsonData.token;\r",
							"pm.collectionVariables.set(\"token\", token)\r",
							"pm.environment.set(\"token\", token)\r",
							"\r",
							"pm.test(\"User login unsuccessfully\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Password incorrect\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 401\", function() {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"salman@roadtocareer.net\",\r\n    \"password\": \"123446\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User login with valid email and password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var token = jsonData.token;\r",
							"pm.collectionVariables.set(\"token\", token)\r",
							"pm.environment.set(\"token\", token)\r",
							"\r",
							"pm.test(\"User login successfully\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Login successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"salman@roadtocareer.net\",\r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all user list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an agent account with unique phone number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.user.id;\r",
							"var phoneNumber = jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"agentId\", id)\r",
							"pm.collectionVariables.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.environment.set(\"agentId\", id)\r",
							"pm.environment.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Agent account created successfully\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000, 99999)\r",
							"// var phoneNumber = \"0112111105\"\r",
							"var phoneNumber = \"0170\"+_.random(1000000, 9999999)\r",
							"pm.collectionVariables.set(\"randomId\", randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\", randomId)\r",
							"pm.environment.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test agent 55\",\r\n    \"email\": \"agent{{randomId}}@test.com\",\r\n    \"password\": \"1234\",\r\n    \"phone_number\": \"{{phoneNumber}}\",\r\n    \"nid\": \"123456789\",\r\n    \"role\": \"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Creating an agent with same phonenumber shall not be successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Agent already existed\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function() {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// // var randomId=_.random(10000, 99999)\r",
							"// var phoneNumber = \"0112111105\"\r",
							"// // pm.collectionVariables.set(\"randomId\", randomId)\r",
							"// // // pm.collectionVariables.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"// // pm.environment.set(\"randomId\", randomId)\r",
							"// // // pm.environment.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test agent 55\",\r\n    \"email\": \"agent{{randomId}}@test.com\",\r\n    \"password\": \"1234\",\r\n    \"phone_number\": \"{{agent_phone_number}}\",\r\n    \"nid\": \"123456789\",\r\n    \"role\": \"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create customer1 account with unique phonenumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.user.id;\r",
							"var phoneNumber = jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"customer1Id\", id)\r",
							"pm.collectionVariables.set(\"customer1_phone_number\", phoneNumber)\r",
							"\r",
							"pm.environment.set(\"customer1Id\", id)\r",
							"pm.environment.set(\"customer1_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Customer account created successfully\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000, 99999)\r",
							"// var phoneNumber = \"0112111105\"\r",
							"var phoneNumber = \"0170\"+_.random(1000000, 9999999)\r",
							"pm.collectionVariables.set(\"randomId\", randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\", randomId)\r",
							"pm.environment.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test customer 155\",\r\n    \"email\": \"agent{{randomId}}@test.com\",\r\n    \"password\": \"1234\",\r\n    \"phone_number\": \"{{phoneNumber}}\",\r\n    \"nid\": \"123456789\",\r\n    \"role\": \"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create customer2 account with unique phonenumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.user.id;\r",
							"var phoneNumber = jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"customer2Id\", id)\r",
							"pm.collectionVariables.set(\"customer2_phone_number\", phoneNumber)\r",
							"\r",
							"pm.environment.set(\"customer2Id\", id)\r",
							"pm.environment.set(\"customer2_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Customer account created successfully\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000, 99999)\r",
							"// var phoneNumber = \"0112111105\"\r",
							"var phoneNumber = \"0170\"+_.random(1000000, 9999999)\r",
							"pm.collectionVariables.set(\"randomId\", randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\", randomId)\r",
							"pm.environment.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test customer 156\",\r\n    \"email\": \"agent{{randomId}}@test.com\",\r\n    \"password\": \"1234\",\r\n    \"phone_number\": \"{{phoneNumber}}\",\r\n    \"nid\": \"123456789\",\r\n    \"role\": \"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create customer account using same phone number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer already existed\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function() {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// var randomId=_.random(10000, 99999)\r",
							"// // var phoneNumber = \"0112111105\"\r",
							"// var phoneNumber = \"0170\"+_.random(1000000, 9999999)\r",
							"// pm.collectionVariables.set(\"randomId\", randomId)\r",
							"// pm.collectionVariables.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"randomId\", randomId)\r",
							"// pm.environment.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test customer 156\",\r\n    \"email\": \"agent{{randomId}}@test.com\",\r\n    \"password\": \"1234\",\r\n    \"phone_number\": \"{{customer1_phone_number}}\",\r\n    \"nid\": \"123456789\",\r\n    \"role\": \"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit less than 10 tk money to agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"agentId\", id)\r",
							"// pm.collectionVariables.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\", id)\r",
							"// pm.environment.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Minimum deposit limit not met\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Minimum deposit amount 10 tk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function() {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 9\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit equal or more than 10 tk money to agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"agentId\", id)\r",
							"// pm.collectionVariables.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\", id)\r",
							"// pm.environment.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Deposit successfully done\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check agent balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"agentId\", id)\r",
							"// pm.collectionVariables.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\", id)\r",
							"// pm.environment.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Agent balance showed\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/balance/{{agent_phone_number}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{agent_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check agent statement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"agentId\", id)\r",
							"// pm.collectionVariables.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\", id)\r",
							"// pm.environment.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Transaction list showed\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Transaction list\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/statement/{{agent_phone_number}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"statement",
						"{{agent_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit less than 10 tk money to customer1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Minimum deposit limit not met\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Minimum deposit amount 10 tk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function() {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 9\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit equal or more than 10 tk money to customer1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Deposit successfully done\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{agent_phone_number}}\",\r\n    \"to_account\": \"{{customer1_phone_number}}\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check customer1 balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"agentId\", id)\r",
							"// pm.collectionVariables.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\", id)\r",
							"// pm.environment.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Customer1 balance showed\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/balance/{{customer1_phone_number}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{customer1_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check customer1 statement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"agentId\", id)\r",
							"// pm.collectionVariables.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\", id)\r",
							"// pm.environment.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Transaction list showed\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Transaction list\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/statement/{{customer1_phone_number}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"statement",
						"{{customer1_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw 10 tk when account has sufficient balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Withdraw successful\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Withdraw successful\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{customer1_phone_number}}\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/withdraw",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw less than 10 tk",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Minimum withdraw amount 10 tk\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Minimum withdraw amount 10 tk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function() {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{customer1_phone_number}}\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 9\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/withdraw",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send money tk 10 or more from customer1 to customer2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Send money successful\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Send money successful\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{customer1_phone_number}}\",\r\n    \"to_account\": \"{{customer2_phone_number}}\",\r\n    \"amount\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/sendmoney",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send money less than 10 tk from customer1 to customer2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Send money unsuccessful\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Minimum amount 10 tk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function() {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{customer1_phone_number}}\",\r\n    \"to_account\": \"{{customer2_phone_number}}\",\r\n    \"amount\": 9\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/sendmoney",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check customer2 balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"agentId\", id)\r",
							"// pm.collectionVariables.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\", id)\r",
							"// pm.environment.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Customer1 balance showed\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/balance/{{customer2_phone_number}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{customer2_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check customer2 statement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"agentId\", id)\r",
							"// pm.collectionVariables.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\", id)\r",
							"// pm.environment.set(\"agent_phone_number\", phoneNumber)\r",
							"\r",
							"pm.test(\"Transaction list showed\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Transaction list\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partnerKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"{{agent_phone_number}}\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/statement/{{customer2_phone_number}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"statement",
						"{{customer2_phone_number}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0OTIyODYzLCJleHAiOjE2NzQ5MjQ2NjN9.qrZJdEQK3XUlDZ-x3XCXhnA4IUGxN_SosYI3xhbrZnE"
		},
		{
			"key": "partnerKey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "randomId",
			"value": 20631
		},
		{
			"key": "phoneNumber",
			"value": "01701042708"
		},
		{
			"key": "agentId",
			"value": 3998
		},
		{
			"key": "agent_phone_number",
			"value": "01701750371"
		},
		{
			"key": "customer1Id",
			"value": 3999
		},
		{
			"key": "customer1_phone_number",
			"value": "01707818991"
		},
		{
			"key": "customer2Id",
			"value": 4000
		},
		{
			"key": "customer2_phone_number",
			"value": "01701042708"
		}
	]
}